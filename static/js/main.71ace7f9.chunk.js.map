{"version":3,"sources":["components/Header.jsx","components/Cards.jsx","components/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","totalTasks","totalTasksComp","totalTasksNot","handlerEvent","className","onClick","Cards","title","id","status","handlerStatus","Loader","App","useState","dataApi","setDataApi","renderTasks","setRenderTasks","totalTasksComplete","setTotalTasksComplete","totalTasksNotComplete","setTotalTasksNotComplete","useEffect","requestApi","a","fetch","response","json","result","selected","slice","settingStatus","map","data","completed","completeTask","filter","length","notCompleteTasks","countersOnHeader","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA0BeA,EAxBA,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,aACzD,OACI,yBAAQC,UAAU,SAAlB,UACI,8BACI,oDAEJ,sBAAKA,UAAU,UAAf,UACI,yBACIC,QAAU,kBAAIF,EAAa,OAC3BC,UAAU,MAFd,wBAEgCJ,KAEhC,yBACIK,QAAU,kBAAIF,GAAa,IAC3BC,UAAU,OAFd,6BAEsCH,KAEtC,yBACII,QAAU,kBAAIF,GAAa,IAC3BC,UAAU,MAFd,4BAEoCF,YCCrCI,G,KAlBD,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAC/B,OAEQ,sBAAKN,UAAU,QAAf,UACI,sBAAKA,UAAU,YAAf,UACI,wCAAWI,KACX,+EAAkDD,QAEtD,qBAAKH,UAAU,aAAf,SACI,wBACIC,QAAS,kBAAKK,EAAcF,IAC5BJ,UAAWK,EAAS,YAAc,cAFtC,SAEsDA,EAAS,YAAc,mBCFlFE,G,MATA,WACX,OACI,sBAAKP,UAAU,mBAAf,UACI,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBCsFZQ,MApFf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,MAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAoDJ,mBAAS,GAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KACA,EAA0DN,mBAAS,GAAnE,mBAAOO,EAAP,KAA8BC,EAA9B,KAGAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,gCAAAC,EAAA,4DACF,6CADE,SAEMC,MADR,8CADE,cAEXC,EAFW,gBAGIA,EAASC,OAHb,OAGXC,EAHW,OAIXC,EAAWD,EAAOE,MAAM,EAAG,IACjCf,EAAWc,GACXZ,EAAeY,GANE,4CAAH,qDAQhBN,MACC,IAIH,IAAMQ,EAAgB,SAACvB,GACrBO,EAAWD,EAAQkB,KAAI,SAAAC,GAAI,OACzBA,EAAKzB,KAAOA,EAAZ,2BAAqByB,GAArB,IAA2BC,WAAWD,EAAKC,YAAYD,MAEzDhB,EAAeD,EAAYgB,KAAI,SAAAC,GAAI,OACjCA,EAAKzB,KAAOA,EAAZ,2BAAqByB,GAArB,IAA2BC,WAAWD,EAAKC,YAAYD,OA6B3D,OAZAX,qBAAU,YACiB,WACvB,IAAMa,EAAerB,EAAQsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKC,aACjDf,EAAsBgB,EAAaE,QAEnC,IAAMC,EAAmBxB,EAAQsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKC,aACrDb,EAAyBiB,EAAiBD,QAE5CE,MAKA,sBAAKnC,UAAU,MAAf,UACE,mCACG,cAAC,EAAD,CACGJ,WAAcc,EAAQuB,OACtBpC,eAAkBiB,EAClBhB,cAAiBkB,EACjBjB,aA/BiB,SAACqC,GACX,OAAVA,EACDvB,EAAeH,IACI,IAAV0B,EACTvB,EAAeH,EAAQsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKC,eACzB,IAAVM,GACRvB,EAAeH,EAAQsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKC,mBA4B7C,qBAAK9B,UAAU,iBAAf,SAEIY,GAAeA,EAAYqB,OAAS,EACpCrB,EAAYgB,KAAI,SAAAC,GAAI,OAClB,cAAC,EAAD,CAEE1B,MAAO0B,EAAK1B,MACZC,GAAIyB,EAAKzB,GACTC,OAAQwB,EAAKC,UACbxB,cAAeqB,GAJVE,EAAKzB,OAMZ,cAAC,EAAD,UCzEGiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.71ace7f9.chunk.js","sourcesContent":["import '../styles/Header.css'\n\nconst Header = ({ totalTasks, totalTasksComp, totalTasksNot, handlerEvent})=>{\n    return (\n        <header className=\"header\">\n            <div>\n                <h1>School Project 1</h1>\n            </div>\n            <div className=\"buttons\">\n                <button\n                    onClick ={()=>handlerEvent(null)}\n                    className=\"all\">All Tasks: {totalTasks}\n                </button>\n                <button\n                    onClick ={()=>handlerEvent(true)}\n                    className=\"comp\">Complete Tasks: {totalTasksComp}\n                </button>\n                <button\n                    onClick ={()=>handlerEvent(false)}\n                    className=\"pen\">Pending Tasks: {totalTasksNot}\n                </button>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import '../styles/Cards.css'\n\nconst Cards = ({title, id, status, handlerStatus})=>{\n    return (\n        \n            <div className=\"cards\">\n                <div className=\"card-text\">\n                    <h2>Task: {id}</h2>\n                    <p>The task that has been assigned for today is: {title}</p>\n                </div>\n                <div className=\"cardButton\">\n                    <button \n                        onClick={()=> handlerStatus(id)}\n                        className={status ? 'completed' : 'unCompleted'}>{status ? 'Completed' : 'Pending'}\n                    </button>\n                </div>\n            </div>\n    )\n}\n\nexport default Cards","import '../styles/Loader.css'\n\nconst Loader = ()=>{\n    return (\n        <div className='loader-container'>\n            <div className='loaderOne'></div>\n            <div className='loaderTwo'></div>\n        </div>\n    )\n}\n\nexport default Loader","import React, {useState, useEffect} from 'react';\n\n//COMPONENTS\nimport Header from './components/Header'\nimport Cards from './components/Cards'\nimport Loader from './components/Loader'\nimport './styles/Cards.css';\n\nfunction App() {\n  //STATES\n  const [dataApi, setDataApi] = useState([])\n  const [renderTasks, setRenderTasks] = useState(null)\n  const [totalTasksComplete, setTotalTasksComplete] = useState(0)\n  const [totalTasksNotComplete, setTotalTasksNotComplete] = useState(0)\n\n  //INITIAL API REQUEST\n  useEffect(() =>{\n    const requestApi = async () =>{\n      const urlDir = 'https://jsonplaceholder.typicode.com/todos'\n      const response = await fetch(urlDir)\n      const result = await response.json()\n      const selected = result.slice(0, 34)\n      setDataApi(selected)\n      setRenderTasks(selected)  \n    }\n    requestApi()\n  }, [])\n\n  //FUNCTIONS\n  // A. Changing state true/false\n  const settingStatus = (id)=>{\n    setDataApi(dataApi.map(data =>(\n      data.id === id ? {...data, completed:!data.completed}: data\n    )))\n    setRenderTasks(renderTasks.map(data =>(\n      data.id === id ? {...data, completed:!data.completed}: data\n    )))\n  }\n\n  // B. Header Buttons Filter\n  const handlerRenderTasks = (value) =>{\n      if(value === null){\n        setRenderTasks(dataApi)\n      } else if (value === true){\n        setRenderTasks(dataApi.filter(data => data.completed === true))\n      } else if(value === false){\n        setRenderTasks(dataApi.filter(data => data.completed === false))\n      }\n      \n  }\n  \n  // HEADER COUNTER BASE & UPDATED VALUES\n  useEffect(()=>{\n    const countersOnHeader = ()=>{\n      const completeTask = dataApi.filter(data => data.completed === true)\n      setTotalTasksComplete(completeTask.length)\n\n      const notCompleteTasks = dataApi.filter(data => data.completed === false)\n      setTotalTasksNotComplete(notCompleteTasks.length)\n    }\n    countersOnHeader()\n  } )\n\n  // RENDERING SECTION\n  return (\n    <div className=\"App\">\n      <>\n         <Header\n            totalTasks = {dataApi.length}\n            totalTasksComp = {totalTasksComplete}\n            totalTasksNot = {totalTasksNotComplete}\n            handlerEvent = {handlerRenderTasks}\n          />\n      </>\n      <div className=\"cardsContainer\">\n        {\n          renderTasks && renderTasks.length > 0 ?\n          renderTasks.map(data =>\n            <Cards\n              key={data.id}\n              title={data.title}\n              id={data.id}  \n              status={data.completed}\n              handlerStatus={settingStatus}\n            />\n          ):<Loader/>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}